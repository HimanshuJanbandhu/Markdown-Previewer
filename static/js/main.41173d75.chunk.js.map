{"version":3,"sources":["Components/Editor/Editor.js","Actions/EditorActions.js","Components/Preview/Preview.js","App.js","reportWebVitals.js","Reducers/textReducer.js","Store/Store.js","index.js"],"names":["Editor","props","handleChange","bind","event","this","setText","target","value","className","id","text","onChange","React","Component","actionCreators","type","payload","clearText","connect","state","Preview","marked","setOptions","breaks","dangerouslySetInnerHTML","__html","written","App","SelectEditor","setState","mode","SelectPreview","AppClass","onMouseOver","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","textReducer","action","Object","assign","initialState","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUAKMA,E,kDACF,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,aAAe,EAAKA,aAAaC,KAAlB,gBAFN,E,gDAKlB,SAAaC,GACTC,KAAKJ,MAAMK,QAAQF,EAAMG,OAAOC,S,oBAGpC,WACI,OACI,sBAAKC,UAAY,YAAjB,UACA,0BAAUC,GAAG,SAASF,MAASH,KAAKJ,MAAMU,KAAMC,SAAUP,KAAKH,eAC/D,4BAAG,gD,GAdMW,IAAMC,WA0B3B,IAAMC,EAAiB,CACnBT,QChCG,SAAiBK,GACpB,MAAO,CACHK,KAAM,WACNC,QAAUN,ID8BdO,UC1BG,WACH,MAAO,CACHF,KAAM,aACNC,QAAU,MDyBHE,eAVf,SAAyBC,GACrB,MAAO,CACHT,KAAMS,EAAMT,QAUhBI,EAFWI,CAEKnB,G,yBEnBLqB,E,4JAbX,WAII,OAHAC,IAAOC,WAAW,CACdC,QAAQ,IAGR,sBAAKf,UAAY,aAAjB,UACI,qBAAKC,GAAG,UAAUe,wBAAyB,CAACC,OAAOJ,IAAOjB,KAAKJ,MAAM0B,YACrE,4BAAG,6D,GARGd,IAAMC,WCEtBc,G,wDACJ,WAAY3B,GAAO,IAAD,8BAChB,cAAMA,IAMR4B,aAAe,WACb,EAAKC,SAAS,CACZC,KAAM,YATQ,EAalBC,cAAgB,WACd,EAAKF,SAAS,CACZC,KAAM,aAbR,EAAKX,MAAQ,CACXW,KAAM,UAHQ,E,0CAmBlB,WACE,IAAIJ,EAAUtB,KAAKJ,MAAMU,KACrBsB,EAAW,OAAS5B,KAAKe,MAAMW,KACnC,OACE,sBAAKtB,UAAawB,EAAlB,UACE,qBAAKC,YAAa7B,KAAKwB,aAAvB,SACE,cAAC,EAAD,MAEF,qBAAKK,YAAa7B,KAAK2B,cAAvB,SACE,cAAC,EAAD,CAASL,QAAWA,a,GA7BZd,IAAMC,YA0CTK,mBANf,SAAyBC,GACvB,MAAO,CACLT,KAAMS,EAAMT,QAIDQ,CAEbS,GCtCaO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCWCQ,EAfK,SAACxB,EAAMyB,GACvB,OAAOA,EAAO7B,MACV,IALS,WAML,OAAO8B,OAAOC,OACV,GAAI3B,EAAO,CAACT,KAAMkC,EAAO5B,UAEjC,IARW,aASP,OAAO6B,OAAOC,OACV,GAAI3B,EAAO,CAACT,KAAM,KAE1B,QACI,OAAOS,ICkCb4B,EAAe,CACjBrC,KA9Ca,smCAmDFsC,EAFDC,YAAYN,EAAYI,GCzCtCG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJK,SAASC,eAAe,SAM1BpB,M","file":"static/js/main.41173d75.chunk.js","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {setText,clearText} from '../../Actions/EditorActions';\nimport './Editor.css';\n\nclass Editor extends React.Component {\n    constructor(props){\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(event) {\n        this.props.setText(event.target.value);\n    }\n\n    render(){\n        return (\n            <div className = \"editorBox\">\n            <textarea id=\"editor\" value = {this.props.text} onChange={this.handleChange}></textarea>\n            <p><b>Write!</b></p>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        text: state.text\n    }\n}\n\nconst actionCreators = {\n    setText,\n    clearText\n}\nexport default connect(\n    mapStateToProps,\n    actionCreators)(Editor);","export function setText(text){\n    return {\n        type: 'SET_TEXT',\n        payload : text\n    }\n}\n\nexport function clearText(){\n    return {\n        type: 'CLEAR_TEXT',\n        payload : ''\n    }\n}","import React from 'react';\nimport './Preview.css';\nimport marked from 'marked';\n\nclass Preview extends React.Component {\n    render(){\n        marked.setOptions({\n            breaks: true\n        });\n        return(\n            <div className = \"previewBox\">\n                <div id=\"preview\" dangerouslySetInnerHTML={{__html:marked(this.props.written)}} />\n                <p><b>Here's the preview.</b></p>\n            </div>\n        )\n    }\n}\n\nexport default Preview;","import {connect} from 'react-redux';\nimport Editor from './Components/Editor/Editor';\nimport Preview from './Components/Preview/Preview';\nimport './App.css';\nimport React from 'react';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      mode: \"normal\"\n    }\n  }\n\n  SelectEditor = () => {\n    this.setState({\n      mode: \"editor\"\n    })  \n  }\n\n  SelectPreview = () => {\n    this.setState({\n      mode: \"preview\"\n    })  \n  }\n\n  render(){\n    let written = this.props.text;\n    let AppClass = \"App \" + this.state.mode; \n    return (\n      <div className = {AppClass}>\n        <div onMouseOver={this.SelectEditor}>\n          <Editor/>\n        </div>\n        <div onMouseOver={this.SelectPreview}>\n          <Preview written = {written}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    text: state.text\n  };\n}\n\nexport default connect(\n  mapStateToProps\n)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const SET_TEXT = 'SET_TEXT';\nconst CLEAR_TEXT = 'CLEAR_TEXT';\n\nconst textReducer = (state,action) => {\n    switch(action.type) {\n        case SET_TEXT:\n            return Object.assign(\n                {}, state, {text: action.payload}\n            );\n        case CLEAR_TEXT:\n            return Object.assign(\n                {}, state, {text: \"\"}\n            );\n        default:\n            return state;\n    }\n}\n\nexport default textReducer;","import {createStore} from 'redux';\nimport textReducer from '../Reducers/textReducer';\n\nconst placeholder = `# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbererd lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://goo.gl/Umyytc)\n`\n\nconst initialState = {\n    text: placeholder\n};\n  \nconst store = createStore(textReducer,initialState);\n\nexport default store;","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './Store/Store';\nimport {Provider} from 'react-redux';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}